name: Deploy to Vultr (SSH)

on:
  push:
    branches: [ "main", "master" ]

jobs:
  ssh_ping:
    name: SSH connectivity check
    runs-on: ubuntu-latest
    steps:
      - name: SSH ping (verify creds & network)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          # Prefer key auth; otherwise keep 'password'
          # key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          timeout: 60s
          command_timeout: 2m
          script_stop: true
          script: |
            set -euxo pipefail
            echo "Connected as $(whoami) on $(hostname)"
            uname -a

  deploy:
    name: Deploy app
    needs: ssh_ping
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          # Prefer key auth; otherwise keep 'password'
          # key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          timeout: 60s
          command_timeout: 30m
          script_stop: true
          script: |
            set -euxo pipefail

            # Ensure required tools
            command -v git  >/dev/null 2>&1 || { apt-get update -y && apt-get install -y git curl; }
            command -v node >/dev/null 2>&1 || { curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && apt-get install -y nodejs && npm i -g pm2; }

            APP_DIR="${{ secrets.APP_DIR }}"
            REPO_URL="${{ secrets.REPO_URL }}"
            mkdir -p "$APP_DIR"

            # Clone on first run; hard-reset on subsequent runs
            [ -d "$APP_DIR/.git" ] && {
              cd "$APP_DIR"
              git fetch --all --prune
              ( git reset --hard origin/main || git reset --hard origin/master )
            } || {
              git clone "$REPO_URL" "$APP_DIR"
              cd "$APP_DIR"
            }

            # Install deps (works without lockfile)
            npm install --omit=dev

            # Start/Reload with PM2
            pm2 delete naic2 || true
            pm2 start server.js --name naic2
            pm2 save

            # Optional: enable PM2 startup at boot
            command -v systemctl >/dev/null 2>&1 && pm2 startup systemd -u "$(whoami)" --hp "$(eval echo ~"$(whoami)")" || true
